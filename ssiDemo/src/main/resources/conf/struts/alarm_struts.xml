<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
    "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>
	<constant name="struts.custom.i18n.resources" value="ApplicationResources" />
	<constant name="struts.i18n.encoding" value="UTF-8"></constant>
	<constant name="struts.objectFactory" value="spring" />

	<!-- 告警浏览 -->
	<package name="alarmview" extends="struts-default">
		<interceptors>
			<interceptor name="authenticate" class="authenticateInterceptor" />
			<interceptor name="turnPageInter" class="turnPageInterceptor" />
			<interceptor name="logInter" class="loginterceptor" />
			<interceptor-stack name="kmStack">
				<interceptor-ref name="authenticate" />
				<interceptor-ref name="turnPageInter" />
				<interceptor-ref name="logInter" />
				<interceptor-ref name="defaultStack" />
			</interceptor-stack>
		</interceptors>
		<default-interceptor-ref name="kmStack" />

		<global-results>
			<result name="LOGIN" type="redirectAction">logout</result>
			<result name="NOAUTHORITY">/WEB-INF/pages/authority/noauthority.jsp</result>
			<result name="error" type="chain">ExceptionIntercepor</result>
		</global-results>

		<global-exception-mappings>
			<exception-mapping exception="java.lang.Exception"
				result="error" />
		</global-exception-mappings>

        <!-- 进入告警管理页面 -->
		<action name="alarmManager" class="alarmMangerAction" method="alarmManager">
			<result name="success">/WEB-INF/pages/alarm/left.jsp</result>
		</action>

		<!-- 进入告警浏览页面 -->
		<action name="alarmView" class="alarmViewAction" method="alarmView">
			<result name="success">/WEB-INF/pages/alarm/view/list.jsp</result>
		</action>
		
		 <!-- 实时告警，左侧树 -->
        <action name="alarmViewTree" class="alarmViewAction" method="alarmViewTree">
        </action>
        
		<!-- 获取告警浏览数据 -->
		<action name="alarmList" class="alarmViewListAction" method="alarmList">
		</action>
		
		<!-- 告警详细 -->
		<action name="alarmDetail" class="alarmViewDetailAction" method="alarmDetail">
		    <result name="success">/WEB-INF/pages/alarm/view/detail.jsp</result>
		</action>
		
		<!-- 清除告警 -->
		<action name="alarmClear" class="alarmViewClearAction" method="alarmClear">
		</action>
		
		<!-- 批量清除告警 -->
		<action name="alarmBatchClear" class="alarmViewClearAction" method="alarmBatchClear">
		</action>
		
		<!-- 确认告警 -->
		<action name="alarmConfirm" class="alarmViewConfirmAction" method="alarmConfirm">
		</action>
		
		<!-- 批量确认告警 -->
		<action name="alarmBatchConfirm" class="alarmViewConfirmAction" method="alarmBatchConfirm">
		</action>
		
		<!-- 邮件通知前准备  -->
		<action name="beforeMailNotify" class="beforeMailNotifyAction" method="beforeMailNotify">
		    <result name="success">/WEB-INF/pages/alarm/view/mailNotify.jsp</result>
		</action>
		
		<!-- 邮件通知 -->
		<action name="mailNotify" class="mailNotifyAction"
			method="mailNotify">
			<result name="input">/WEB-INF/pages/alarm/view/mailNotify.jsp</result>
		</action>
		
		<!-- 短信通知前准备 -->
		<action name="beforeSmsNotify" class="beforeSmsNotifyAction" method="beforeSmsNotify">
		    <result name="success">/WEB-INF/pages/alarm/view/smsNotify.jsp</result>
		</action>
		
		<!-- 选择通知人员 -->
		<action name="selectNotifyMember" class="selectNotifyMember" method="selectNotifyMember">
		    <result name="success">/WEB-INF/pages/alarm/view/selectNotifyMember.jsp</result>
		</action>
		
		<!-- 短信通知 -->
		<action name="smsNotify" class="smsNotifyAction"
			method="smsNotify">
			<result name="input">/WEB-INF/pages/alarm/view/smsNotify.jsp</result>
		</action>
		
		<!-- 设备信息前准备 -->
		<action name="beforeDeviceInfo" class="beforeDeviceInfoAction" method="beforeDeviceInfo">
		    <result name="success">/WEB-INF/pages/alarm/view/deviceInfo.jsp</result>
		</action>
		
		<!-- 获取具体设备信息 -->
		<action name="getRelationDevice" class="beforeDeviceInfoAction" method="getRelationDevice">
		<result name="success">/WEB-INF/pages/alarm/view/relationDevice.jsp</result>
		</action>

        <!-- 获取告警浏览数据 -->
		<action name="getalarmNotify" class="alarmViewListAction" method="getalarmNotify">
		</action>
		
		
		<!-- 邮件通知 -->
		<action name="alarmMailNotify" class="mailNotifyAction" method="alarmMailNotify">
		</action>
		
		<!-- 短信通知 -->
		<action name="alarmSMNotify" class="smsNotifyAction" method="alarmSMNotify">
		</action>
		
		  <!--添加事件-->
        <action name="alarmCreateEvent" class="AlarmToEventAddAction" method="alarmCreateEvent">
        </action>
        
        <!-- 数据导出 -->
        <action name="realTimeAlarmDownLoad" class="alarmViewListAction" method="export">
            <result type="stream" name="returnStream">
                <!-- 下载文件的类型,假如下载的是其他的，但你又不知道是什么格式，可以去 tomcat\conf\web.xml下找 -->
                <param name="contentType">
                    application/vnd.ms-excel
                </param>
                <!--  返回流 excelStream为action中的流变量名称 -->
                <param name="inputName">excelStream</param>
                <!-- attachment 这个位置的参数挺特殊的，可以设置成下载时，是否出现个下载提示框，或者直接下载之类的，怎么设置忘了，那个小本子找不到了
                    fileName指定生成的文件名字(这种方式合适动态生成文件名，比如做报表时，一般都要说是几月的统计数据之类)为action中变量  -->
                <param name="contentDisposition">
                    attachment;filename=${excelFileName}
                </param>
                <param name="bufferSize">1024</param>
            </result>
            <result name="ERROR" type="redirectAction">
                <param name="actionName">alarmView</param>
                <param name="errorMsg">${errorMsg}</param>
            </result>
        </action>
		
	</package>
</struts>
